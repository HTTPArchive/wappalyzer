name: Upload technologies to BQ and Cloud Storage

on:
  push:
    branches:
      - main
      - fix-icon-extension
    paths:
      - "src/technologies/*.json"
      - "src/categories.json"
      - "src/groups.json"
      - "src/images/icons/**"
  workflow_dispatch:

jobs:
  test:
    name: Test and upload to GCP
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 50


      - name: Install dependencies
        run: yarn install

      - name: Validate
        id: validate
        run: |
          yarn run lint
          yarn run validate

      - name: Check validation status
        if: ${{ failure() && steps.validate.conclusion == 'failure' }}
        run: |
          echo "Validation failed. Stopping workflow."
          exit 1

      - name: Get changed technology files
        run: |
          git fetch origin main --depth=50
          TECH_FILES_CHANGED=$(git diff --name-only HEAD~25 HEAD -- 'src/technologies/*.json' 'src/categories.json' 'src/groups.json' | wc -l)
          echo $TECH_FILES_CHANGED
          echo "TECH_FILES_CHANGED=${TECH_FILES_CHANGED}" >> $GITHUB_ENV

      - name: Upload technology rules to BigQuery
        if: env.TECH_FILES_CHANGED != ''
        env:
          GCP_PROJECT_ID: 'httparchive'
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: echo $TECH_FILES_CHANGED
        # yarn run tech_upload

      - name: Get changed icons
        run: |
          git fetch origin main --depth=50
          CHANGED_ICONS=$(git diff --name-only HEAD~50 HEAD -- 'src/images/icons/*.svg' 'src/images/icons/*.png' | xargs)
          echo $CHANGED_ICONS
          echo "CHANGED_ICONS=${CHANGED_ICONS}" >> $GITHUB_ENV

      - name: Install Image Convertion Package
        if: env.CHANGED_ICONS != ''
        run: sudo apt-get install -y librsvg2-bin

      - name: Convert changed SVGs to PNGs
        if: env.CHANGED_ICONS != ''
        run: |
          for file in $CHANGED_ICONS; do
            if [[ "$file" == *.svg ]]; then
              png_file="${file%.svg}.png"
              echo "Converting $file to $png_file"
              rsvg-convert "$file" -o "$png_file" -w 16 -h 16
            fi
          done

      - name: Authenticate with Google Cloud
        if: env.CHANGED_ICONS != ''
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        if: env.CHANGED_ICONS != ''
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Sync new PNGs to Cloud Storage
        if: env.CHANGED_ICONS != ''
        run: |
          TMP_SYNC_DIR=$(mktemp -d)
          echo "Temporary directory for sync: $TMP_SYNC_DIR"
          for file in $CHANGED_ICONS; do
            if [[ "$file" == *.svg ]]; then
              png_file="${file%.svg}.png"
              cp "$png_file" "$TMP_SYNC_DIR/"
            elif [[ "$file" == *.png ]]; then
              cp "$file" "$TMP_SYNC_DIR/"
            fi
          done

          gcloud storage rsync src/images/icons/ gs://httparchive/static/icons_dev/ --exclude="*.svg" --cache-control="public, max-age=31536000, immutable"
